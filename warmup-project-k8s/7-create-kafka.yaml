---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: zookeeper-pv-volume  # Sets PV's name
  labels:
    type: local
spec:
  storageClassName: zookeeper-local-storage
  capacity:
    storage: 5Gi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/zookeeper-data"
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: zookeeper-log-pv-volume  # Sets PV's name
  labels:
    type: local
spec:
  storageClassName: zookeeper-log-local-storage
  capacity:
    storage: 5Gi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/zookeeper-data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zookeeper-pv-claim  # Sets name of PVC
spec:
  storageClassName: zookeeper-local-storage
  accessModes:
    - ReadWriteOnce  # Sets read and write access
  resources:
    requests:
      storage: 5Gi  # Sets volume size
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zookeeper-log-pv-claim  # Sets name of PVC
spec:
  storageClassName: zookeeper-log-local-storage
  accessModes:
    - ReadWriteOnce  # Sets read and write access
  resources:
    requests:
      storage: 5Gi  # Sets volume size
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper-service
  name: zookeeper-k8s
spec:
  type: NodePort
  ports:
    - name: zookeeper-port
      port: 2181
      nodePort: 30181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - image: confluentinc/cp-zookeeper:5.3.0
          imagePullPolicy: IfNotPresent
          name: zookeeper
          env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
          volumeMounts:
          - mountPath: /var/lib/zookeeper/data
            name: zookeeper-persistent-storage
          volumeMounts:
          - mountPath: /var/lib/zookeeper/log
            name: zookeeper-log-persistent-storage
      volumes:
        - name: zookeeper-persistent-storage
          persistentVolumeClaim:
            claimName: zookeeper-pv-claim
        - name: zookeeper-log-persistent-storage
          persistentVolumeClaim:
            claimName: zookeeper-log-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-broker
  name: kafka-k8s
spec:
  type: NodePort
  ports:
  - name: "9092"
    port: 9092
    protocol: TCP
    targetPort: 9092
  - name: "9093"
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: "32092"
    port: 32092
    protocol: TCP
    targetPort: 32092
    nodePort: 32092
  selector:
    app: kafka-broker
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: kafka-pv-volume  # Sets PV's name
  labels:
    type: local
spec:
  storageClassName: kafka-local-storage
  capacity:
    storage: 5Gi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/broker-data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kafka-pv-claim  # Sets name of PVC
spec:
  storageClassName: kafka-local-storage
  accessModes:
    - ReadWriteOnce  # Sets read and write access
  resources:
    requests:
      storage: 5Gi  # Sets volume size
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - env:
        - name: MY_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-k8s:2181
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INTERNAL://kafka-broker:9093,CLIENT://kafka-k8s:9092,EXTERNAL://$(MY_HOST_IP):32092
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_LISTENERS
          value: INTERNAL://:9093,CLIENT://:9092,EXTERNAL://:32092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "2000000"
        image: confluentinc/cp-kafka:5.3.0
        imagePullPolicy: IfNotPresent
        name: kafka-broker
        volumeMounts:
        - mountPath: /var/lib/kafka/data
          name: kafka-persistent-storage
      volumes:
        - name: kafka-persistent-storage
          persistentVolumeClaim:
            claimName: kafka-pv-claim

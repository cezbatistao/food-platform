apiVersion: apps/v1
kind: Deployment
metadata:
  name: food-restaurant
spec:
  selector:
    matchLabels:
      app: food-restaurant
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: food-restaurant
    spec:
      containers:
      - name: food-restaurant
        image: cezbatistao/food-restaurant:1.0.0-0
        env:
        - name: ENVIRONMENT_APP
          value: k8s
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: food-gateway
spec:
  selector:
    matchLabels:
      app: food-gateway
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: food-gateway
    spec:
      containers:
      - name: food-gateway
        image: cezbatistao/food-gateway:1.0.0-0
        env:
        - name: ENVIRONMENT_APP
          value: k8s
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: food-ui-webapp
spec:
  selector:
    matchLabels:
      app: food-ui-webapp
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: food-ui-webapp
    spec:
      containers:
      - name: food-ui-webapp
        image: cezbatistao/food-ui-webapp:1.0.0-0
        env:
        - name: PROXY_ENV
          value: k8s
        - name: ENVIRONMENT_APP
          value: k8s
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: food-restaurant-svc
spec:
  selector:
    app: food-restaurant
  ports:
    - name: http
      port: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: food-gateway-svc
spec:
  selector:
    app: food-gateway
  ports:
    - name: http
      port: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: food-ui-webapp-svc
spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: food-ui-webapp
  ports:
    - name: http
      port: 8080
      nodePort: 30080
  type: NodePort

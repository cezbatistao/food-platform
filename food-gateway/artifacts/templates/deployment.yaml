apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      imagePullSecrets:
      - name: pullsecret
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            failureThreshold: {{ .Values.image.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.image.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.image.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.image.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.image.livenessProbe.timeoutSeconds }}
            httpGet:
              path: {{ .Values.image.livenessProbe.path }}
              port: {{ .Values.service.port }}
          readinessProbe:
            failureThreshold: {{ .Values.image.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.image.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.image.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.image.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.image.readinessProbe.timeoutSeconds }}
            httpGet:
              path: {{ .Values.image.readinessProbe.path }}
              port: {{ .Values.service.port }}
          resources:
            limits:
              cpu: {{ .Values.resourcesLimitsCpu }}
              memory: {{ .Values.resourcesLimitsMemory }}
            requests:
              cpu: {{ .Values.resourcesLimitsRequestsCpu }}
              memory: {{ .Values.resourcesLimitsRequestsMemory }}
          env:
          - name: ENV
            value: {{ .Values.environment }}
          - name: KUBERNETES_NAMESPACE
            value: {{ .Values.namespace }}
          - name: spring.profiles.active
            value: {{ .Values.profilesActive }}
          - name: ENVIRONMENT_APP
            value: {{ .Values.profilesActive }}

